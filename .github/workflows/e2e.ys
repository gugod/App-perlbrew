--- !yamlscript/v0

job-config =::
  with-dnf =:: &with-dnf |
    dnf install -y zsh perl make automake gcc gcc-c++ kernel-devel gawk

  fedora:
    init: *with-dnf

  almalinux:
    init: *with-dnf

  rockylinux:
    env:
      PERLBREW_E2E_INSTALL_NOTEST: 1
    init: *with-dnf
  
  debian:
    init: |
      apt-get update -y
      apt-get install -y zsh perl curl build-essential
  
  ubuntu:
    init: |
      yes | unminimize
      apt-get update -y
      apt-get install -y zsh perl curl build-essential man-db
  
  opensuse:
    init: |
      zypper install -y -t pattern devel_basis
      zypper install -y zsh perl awk
  
  alpine:
    init: |
      apk add zsh perl

e2e-steps =::
  - uses: actions/checkout@v4
  - run: zsh ./test-e2e/run.zsh

defn gen-container-job(config image=nil)::
  runs-on: ubuntu-latest
  container:
    image:: image
  env:
    PERLBREW_E2E: 1
    :: config.env
  steps:
    - run:: config.init
    - :: e2e-steps

defn gen-macos-job(os)::
  runs-on:: os
  steps:
    - uses: shogo82148/actions-setup-perl@v1.31.3
      with:
        perl-version: "5.40"
    - :: e2e-steps

defn gen-cygwin-job()::
  runs-on: windows-latest
  env:
    PERLBREW_E2E_INSTALL_NOTEST: 1
  steps:
    - uses: cygwin/cygwin-install-action@master
      with:
        packages: zsh bash curl make perl gcc-g++ libcrypt-devel perl-Module-Build perl-Module-Pluggable
        add-to-path: true
    - uses: actions/checkout@v4
    - name: run e2e
      run: |
        cd "$GITHUB_WORKSPACE"
        zsh ./test-e2e/run.zsh
      shell: C:\cygwin\bin\bash.exe --login -o igncr -eo pipefail '{0}'

--- !yamlscript/v0:
name: E2E

on:
  workflow_dispatch:
  push:
    paths:
      - perlbrew
      - .github/workflows/e2e.yml
      - test-e2e/*.zsh

jobs:
  debian:: gen-container-job(job-config.debian, 'debian:latest')
  ubuntu:: gen-container-job(job-config.ubuntu, 'ubuntu:latest')
  fedora:: gen-container-job(job-config.fedora 'fedora:latest')
  almalinux:: gen-container-job(job-config.almalinux 'almalinux:latest')
  rockylinux:: gen-container-job(job-config.rockylinux 'docker.io/rockylinux/rockylinux:latest')
  opensuse:: gen-container-job(job-config.opensuse 'opensuse/tumbleweed:latest')
  macos-latest:: gen-macos-job("macos-latest")
  macos-13:: gen-macos-job("macos-13")
  cygwin:: gen-cygwin-job()
